.include "./nominal.jsim"
.include "./stdcell.jsim"
.include "./lab5ctl.jsim"

.subckt ctl reset id[31:26] ra2sel bsel alufn[5:0] wdsel[1:0] werf moe wr

Xctl vdd 0 0 id[31:26] pcsel[2:0] wasel asel ra2sel bsel alufn[5:0] wdsel[1:0] werf moe xwr
+ $memory width=18 nlocations=64 contents=(
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000100000010110 // opcode=0b011000  LD
+ 0b000001100000000001 // opcode=0b011001  ST
+ 0b000000000000000000 
+ 0b000000000000000000 // opcode=0b011011  JMP
+ 0b000000000000000000 
+ 0b000000000000000000 // opcode=0b011101  BEQ
+ 0b000000000000000000 // opcode=0b011110  BNE
+ 0b000000000000000000 // opcode=0b011111  LDR
+ 0b000000000000001100 // opcode=0b100000  ADD
+ 0b000000000000101100 // opcode=0b100001  SUB
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000011001101100 // opcode=0b100100  CMPEQ
+ 0b000000011010101100 // opcode=0b100101  CMPLT
+ 0b000000011011101100 // opcode=0b100110  CMPLE
+ 0b000000000000000000 
+ 0b000000001100001100 // opcode=0b101000  AND
+ 0b000000001111001100 // opcode=0b101001  OR
+ 0b000000001011001100 // opcode=0b101010  XOR
+ 0b000000000000000000 
+ 0b000000010000001100 // opcode=0b101100  SHL
+ 0b000000010000101100 // opcode=0b101101  SHR
+ 0b000000010001101100 // opcode=0b101110  SRA
+ 0b000000000000000000 
+ 0b000000100000001100 // opcode=0b110000  ADDC
+ 0b000000100000101100 // opcode=0b110001  SUBC
+ 0b000000000000000000 
+ 0b000000000000000000 
+ 0b000000111001101100 // opcode=0b110100  CMPEQC
+ 0b000000111010101100 // opcode=0b110101  CMPLTC
+ 0b000000111011101100 // opcode=0b110110  CMPLEC
+ 0b000000000000000000 
+ 0b000000101100001100 // opcode=0b111000  ANDC
+ 0b000000101111001100 // opcode=0b111001  ORC
+ 0b000000101011001100 // opcode=0b111010  XORC
+ 0b000000000000000000 
+ 0b000000110000001100 // opcode=0b111100  SHLC
+ 0b000000110000101100 // opcode=0b111101  SHRC
+ 0b000000110001101100 // opcode=0b111110  SRAC
+ 0b000000000000000000 
+ )

Xnand reset xwr 0 wr mux2

.ends
